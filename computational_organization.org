#+TITLE:computational organization

* hardware

** CPU
+ ALU: arithimetic logical unity: mathematical operations
+ clock: period which info are processed inside the ALU
+ cache: fastest and smallest memory, inside the CPU
at first, companies focused in increasing clock, as it measured the quality,
(an 1800MHz was better than a 1600MHz),
but after sometime, other things were put in balance

*** smart cache
as CPUs grew more complex, a more efficient form of storing data in cache was necessary,
with smart cache, it became possible to store most frequently used data as close to the
CPU as possible


** RAM memory
+ stores apps and info loaded by the CPU
+ stores data used while processing other data
+ not sequencial, you can access an address at any given time, (Random Access Memory)
+ only works if has electrical currency
+ has storage (4MB) and velocity (1600mhz)


** permanent memory
+ RAM only stores data if it's provided with energy, if not, all data is lost
+ actually, HDs and SSDs lead this market


** motherboard
+ periferals, CPU and memory are attached to it (system bus [barramento])
+ provides inergy


** CISC vs RISC computers:
+ cisc are the machines we use normally
+ risc are expensive

| CISC                                         | RISC                                |
|----------------------------------------------+-------------------------------------|
| complex instructions taking multiple cycles  | simple instructions taking 1 cycles |
| any instruction may reference memory         | only LOADS/STORES reference memory  |
| not pipelined or less pipelined              | highly pipelined                    |
| instructions interpreted by the microprogram | instructions executed by hardware   |
| variable format instructions                 | fixed format instructions           |
| many instructions and models                 | few instructions and models         |
| complexity is in the microprogram            | complexity is in the compiler       |
| single register set                          | multiple register set               |
|----------------------------------------------+-------------------------------------+


* software

** OS (operating system)
+ abstraction so apps run above it don't need to know what's below (hardware)
+ alocates memory in main memory (RAM)
+ gives processes access to CPU
+ history
  + in the 70s, UNIX is created
  + in the 80s, Ms DOS is created
  + the feature of windows in OSs made a big difference in the market
  + actually, embedded systems are the news


** internet
+ in the 70s, the americans connected many computers so they could comunicate (ARPANET)
+ many networks quickly emerged, becoming the internet

